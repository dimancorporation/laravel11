apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgsql
  labels:
    app: pgsql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pgsql
  template:
    metadata:
      labels:
        app: pgsql
    spec:
      terminationGracePeriodSeconds: 30
      initContainers:
        - name: init-postgres
          image: postgres:15-alpine
          command: [
            "sh",
            "-c",
            "sleep 10 && PGPASSWORD=$POSTGRES_PASSWORD psql -h localhost -U postgres -c \"CREATE DATABASE $DB_DATABASE;\""
          ]
          env:
            - name: DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: pgsql-credentials
                  key: database
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pgsql-credentials
                  key: password
      containers:
        - name: postgres
          image: postgres:15-alpine
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pgsql-credentials
                  key: password
            - name: DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: pgsql-credentials
                  key: database
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: pgsql-credentials
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pgsql-credentials
                  key: password
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: pgsql-credentials
                  key: port

          ports:
            - containerPort: 5432
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-storage
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: postgres-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-pv
  labels:
    type: local
spec:
  capacity:
    storage: 4Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: postgres-storage
  local:
    path: /var/lib/postgresql/data
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - 185-46-9-205.cloudvps.regruhosting.ru
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  storageClassName: postgres-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 4Gi
---
apiVersion: v1
kind: Service
metadata:
  name: pgsql-service
spec:
  selector:
    app: pgsql
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  type: ClusterIP
